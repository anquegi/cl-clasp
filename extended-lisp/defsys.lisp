;;;; -*- Mode:Common-Lisp; Package:CL-USER; Fonts:(MEDFNT); Base:10 -*-;;;; *-* File: Titanic: /usr/users/eksl/mac-files/extended-lisp/defsys.lisp *-*;;;; *-* Last-edit: Monday, June 28, 1993  11:13:18; Edited-By: StAmant *-* ;;;; *-* Machine: Miles (Explorer II, Microcode 489) *-*;;;; *-* Software: TI Common Lisp System 6.49 *-*;;;; *-* Lisp: TI Common Lisp System 6.49  *-*;;;; **************************************************************************;;;; **************************************************************************;;;; *                                                                        *;;;; *                            System Definition                           *;;;; *                                                                        *;;;; **************************************************************************;;;; **************************************************************************;;;;;; Written by: David L. Westbrook;;;             Experimental Knowledege Systems Laboratory;;;             Paul R. Cohen, Principal Investigator;;;             David L. Westbrook, Systems Manager;;;             David M. Hart, Laboratory Manager;;;             Department of Computer and Information Science;;;             University of Massachusetts;;;             Amherst, Massachusetts 01003.;;;;;; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *;;;;;;  01-19-93 File Created.  (Westy);;;;;; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *;;; --*--(in-package #+CLTL2 :COMMON-LISP-USER #-CLTL2 :USER);;; --*--;;; ***************************************************************************#+(or Allegro Lucid MCL)(assert (find-package 'portable-defsystem)	nil	"~%I really need the Public Domain DEFSYSTEM-Facility"	)(defun el-load-pathname ()  #+lucid lcl:*source-pathname*  #+allegro excl:*source-pathname*  #+Explorer (ticl::translated-pathname sys:fdefine-file-pathname)  #+Genera (sys::translated-pathname sys:fdefine-file-pathname)  #+MCL (translate-logical-pathname *load-pathname*)   #-(or lucid allegro Genera Explorer MCL) *load-pathname*)#+Defsystem(portable-defsystem:defsystem Extended-Lisp    (:default-pathname (el-load-pathname)     :default-binary-pathname     (make-pathname      :directory `(,@(pathname-directory (el-load-pathname))                   #+lispworks                   "bin-harlequin"                   #+MCL                   "bin-MCL"                   #+(and allegro mips)                   "bin-allegro-mips"                   #+(and allegro sparc)                   "bin-allegro-sparc"                   #+lucid                   "bin-lucid")))    ("el-package")  ("lisp-extensions")  #-Explorer  ("time-parse"));;;----------------------------------------------------------------------------#+Explorer(fs:add-logical-pathname-host    "extended-lisp" (pathname-host (el-load-pathname))    `(("source" "" ,(pathname-directory (el-load-pathname)))      ("binary" "" ,(append (pathname-directory (el-load-pathname))                            '("BIN-EXPLORER")))))#+Explorer(ticl::defsystem EXTENDED-LISP  (:name "EXTENDED LISP")  (:short-name "EL")  (:pathname-default "extended-lisp:source;")  (:default-output-directory "extended-lisp:binary;")  (:compile-load-modules    ("el-package"     "lisp-extensions")))#+GBB-DEFMODULE(gbb::defdirectory el-dir                   #+EXPLORER                   "el:binary;" 		   #+EXPLORER                   "el:source;"		   #+Lispworks                   "/usr/users/eksl/systems/extended-lisp/"		   #+Lispworks		   "/usr/users/eksl/systems/extended-lisp/bin-harlequin")#+GBB-DEFMODULE(gbb::defmodule Extended-Lisp  (:directory el-dir)  (:files    "el-package"    #-Explorer    "time-parse"    "lisp-extensions"));;; ***************************************************************************;;; EOF